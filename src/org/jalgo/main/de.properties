JalgoMain.none_1=none
JalgoMain.none_(_6=none (
JalgoWindow.jAlgo_-_Version_X.XX_1=jAlgo - Version 0.42
JalgoWindow.&New_3=&Neu
JalgoWindow.&File_4=&Datei
JalgoWindow.&Help_5=&Hilfe
MenuCreator.EBNF-Diagramm_1=EBNF-Diagramm
MenuCreator.EBNF-Term_3=EBNF-Term
AboutAction.About_jAlgo_1=\u00DCber jAlgo
AboutAction.Get_infos_about_jAlgo._2=Erfahren Sie mehr \u00FCber jAlgo.
AboutAction.About_jAlgo_4=\u00DCber jAlgo
AboutAction.jAlgo_Name_5=jAlgo - The Algorithm Visualisation Tool - Version: 0.42\n
AboutAction.jAlgo_Copyright_7=(c) Copyright jAlgo-Team 2004.  All rights reserved.\n
AboutAction.jAlgo_Visit_URL_8=Besuchen Sie auch http://www.inf.tu-dresden.de/~swt04-p1\n
AboutAction.Author__n_10=Autoren:\n
AboutAction.jAlgo_Authors_11=Cornelius Hald, Malte Blumberg, Christopher Friedrich, Anne Kersten, Hauke Menges\n
AboutAction.License__n_13=Lizenz:\n
AboutAction.GNU_General_Public_License_14=GNU General Public License
AboutModuleAction.About_jAlgo-Module_1=\u00DCber das jAlgo-Modul
AboutModuleAction.Get_infos_about_jAlgo-Module._2=Erfahren Sie mehr \u00FCber das jAlgo-Modul.
AboutModuleAction.About_jAlgo-Module_4=\u00DCber das jAlgo-Modul
AboutModuleAction._-_Version__5=\ - Version 
AboutModuleAction.Author___n_8=Autoren: \n
AboutModuleAction.License___n_10=Lizenz: \n
CloseAction.Close_1=Schliessen
CloseAction.Close._2=Schliessen.
ExitAction.E&xit@Ctrl+W_1=&Beenden@Ctrl+W
ExitAction.Exit_Application._2=Anwendung beenden.
ExportAction.Export_1=Export
ExportAction.Export_image_2=Bild exportieren
ExportAction.Export_file_4=Datei exportieren
ExportAction.Bitmap_(*.bmp)_6=Bitmap (*.bmp)
OpenAction.Open_file..._1=Datei &\u00F6ffnen...
OpenAction.Open_a_file_2=\u00D6ffnet eine Datei
OpenAction.Open_file_4=Datei \u00F6ffnen
OpenAction.jAlgo_files_(*.jalgo)_7=jAlgo Dateien (*.jalgo)
OpenAction.All_files_8=Alle Dateien
PrintAction.Print_1=Drucken
PrintAction.Print_this_view_2=Druckt diesen Bereich
PrintViewAction.Print_1=Drucken
PrintViewAction.Print_this_view_2=Druckt diesen Bereich
PrintViewAction.Choose_printer_4=Druckerauswahl
SaveAction.Save_1=Speichern
SaveAction.Save_2=Speichern
SaveAction.Save_file._3=Datei speichern.
SaveAsAction.Save_As_1=Speichern als
SaveAsAction.Save_As_2=Speichern als
SaveAsAction.Save_As..._3=Speichern als...
SaveAsAction.Save_file_5=Datei speichern
SaveAsAction.*.jalgo_6=*.jalgo
ZoomInAction.Zoom_In_1=Reinzoomen
ZoomInAction.Zoom_In._2=Reinzoomen.
ZoomOutAction.Zoom_Out_1=Rauszoomen
ZoomOutAction.Zoom_Out._2=Rauszoomen.
ZoomToFitAction.Zoom_to_fit_1=Passend zoomen
ZoomToFitAction.Zoom_to_fit_2=Passend zoomen
PrintDialogNext.Select_scaling_mode_1=Skaliermodus ausw\u00E4hlen
PrintDialogNext.Scale_to_fit_on_one_page_2=Auf eine Seite passend skalieren
PrintDialogNext.Scale_only_width_3=Nur Breite skalieren
PrintDialogNext.Scale_only_height_4=Nur H\u00F6she skalieren
PrintDialogNext.No_scaling_5=Keine Skalierung
PrintDialogNext.Warning__6=Warnung:
PrintDialogNext.Layout_warning_7=Dies funktioniert nur, wenn der Bereich bereits ein Layout hat\! Andernfalls geschieht das gleiche wie bei \"Keine Skalierung\". \nM\u00D6chten Sie fortfahren?
Storage.Could_not_open_file_4=Datei kann nicht ge\u00D6ffnet werden.
Storage.File_not_valid_5=Die Datei ist keine korrekte jAlgo-Datei.
Storage.Could_not_write_file_7=Datei kann nicht geschrieben werden
Storage.Could_not_write_the_file._n_8=Datei konnte nicht geschrieben werden.\n
Storage.Maybe_out_of_diskspace_9=Vielleicht haben Sie versucht, auf ein read-only Medium zu schreiben oder die Speicherkapazit\u00C4t reicht nicht mehr aus.
GenerateWord.Algo_title_2=R\u00FCcksprungalgorithmus zur Wortgenerierung:\n
GenerateWord.Algo_description_1_3=0. Bevor der Algorithmus abl\u00E4uft, wird der Ausgang jedes K\u00E4stchens mit \n
GenerateWord.Algo_description_2_4=\ \ \ einer Marke versehen; genannt R\u00FCcksprungadresse dieses K\u00E4stchens.\n
GenerateWord.Algo_description_3_5=1. Beginne am Eingang des ersten Syntaxdiagramms von U (Startdiagramm).\n
GenerateWord.Algo_description_4_6=2. Folge den Linien auf einem legalen Weg.\n
GenerateWord.Algo_description_5_7=\ \ \ - Falls dabei der Ausgang erreicht wrid, gehe nach Punkt 5.\n
GenerateWord.Algo_description_6_8=\ \ \ - Falls ein K\u00E4stchen bzw. Oval erreicht wird, gehe nach Punkt 3.\n
GenerateWord.Algo_description_7_9=3. - Falls es sich um ein Oval handelt, notiere das darin enthaltene \n
GenerateWord.Algo_description_8_10=\ \ \ \ \ Terminalzeichen und gehe anschlie\u00DFend zu Punkt 2 zur\u00FCck.\n
GenerateWord.Algo_description_9_11=\ \ \ - Andernfalls gehe zu Punkt 4.\n
GenerateWord.Algo_description_10_12=4. - Falls es sich um ein K\u00E4stchen handelt, dann \n
GenerateWord.Algo_description_11_13=\ \ \ \ \ \ -> lege eine Kopie der R\u00FCcksprungadresse dieses K\u00E4stchens oben auf den Keller,\n
GenerateWord.Algo_description_12_14=\ \ \ \ \ \ -> suche den Eingang des Diagranns in U auf, welches den Namen tr\u00E4gt,\n
GenerateWord.Algo_description_13_15=\ \ \ \ \ \ \ \ \ der in dem erreichten K\u00E4stchen steht\n
GenerateWord.Algo_description_14_16=\ \ \ \ \ \ -> und arbeite an dem Eingang des neuen Diagramms ab Punkt 2 weiter.\n
GenerateWord.Algo_description_15_17=5. - Wenn noch eine R\u00FCcksprungadresse adr auf dem Keller liegt, dann\n
GenerateWord.Algo_description_16_18=\ \ \ \ \ \ -> gehe zur Stelle, die mit adr gekennzeichnet ist und\n
GenerateWord.Algo_description_17_19=\ \ \ \ \ \ -> nehme adr vom Keller und setzte die Bearbeitung an dieser Stelle am Punkt 2 fort.\n
GenerateWord.Algo_description_18_20=6. - Wenn keine R\u00FCcksprungadresse auf dem Keller liegt und man sich am Ausgang des \n
GenerateWord.Algo_description_19_21=\ \ \ \ \ Startdiagrammes befindet, dann endet der Erzeugungsprozess hier erfolgreich.\n
GenerateWord.Algo_description_20_22=\n vgl. \'Algorithmen, Datenstrukturen und Programierung\' Skript von Prof. Vogler vom 7.10.2002 Seite 22
GenerateWord.The_word_which_was_generated_is__n_23=Das bis hierhin generierte Wort lautet:\n
GenerateWord.The_word_which_was_generated_is__n_29=Das bis hierhin generierte Wort lautet:\n
GenerateWord.Algorithm_is_ready_30=Der Algorithmus ist fertig
GenerateWord.The_algorithm_has_finished_!_The_generated_Word_is__31=Der Algorithmus wurde beendet\! Das generierte Wort lautet 
GenerateWord.._Should_the_algorithm_be_closed__32=. Soll der Algorithmus geschlossen werden?
GenerateWord.Alternative_Dialog_33=Alternativen-Dialog
GenerateWord.The_ways_are_numbered_form_top_to_bottom._There_are__34=Die Wege sind von oben nach unten durchnummeriert. Es gibt 
GenerateWord._ways_to_go_!_Which_one_do_you_want_to_go__35=\ Wege\! Welchen wollen Sie nehmen?
GenerateWord.Warning_37=Warnung
GenerateWord.Please_use_a_value_between_1_and__38=Bitte nehmen sie einen Wert von 1 bis 
GenerateWord.Repetition_Dialog_40=Wiederholungs-Dialog
GenerateWord.Do_you_want_to_go_through_the_repetition__41=M\u00F6chten Sie durch die Wiederholung gehen?
ModuleInfo.EBNF_und_Syntaxdiagramme_1=EBNF und Syntaxdiagramme
ModuleInfo.Authors_3=Michael Pradel, Marco Zimmerling, Benjamin Scholz, Babett Schalitz, Stephan Creutz
ModuleInfo.Description_1_4=Dieses Modul behandelt Syntaxdiagramme und EBNF-Gleichungen. Es ist m\u00F6glich 
ModuleInfo.Description_2_5=diese zu erstellen und anschlie\u00DFend einige Algorithmen damit durchzuf\u00FChren: \n
ModuleInfo.Description_3_6=- Der trans-Algorithmus wandelt EBNF-Gleichungen in ein \u00E4quivalentes Syntaxdiagramm-SynDiaSystem um.\n
ModuleInfo.Description_4_7=- F\u00FCr ein bestimmtes Syntaxdiagramm-SynDiaSystem kann man eine Worterkennung durchf\u00FChren, um zu pr\u00FCfen,
ModuleInfo.Description_5_8=ob ein Wort durch diese Syntaxdiagramme beschrieben werden kann.\n
ModuleInfo.Description_6_9=- Au\u00DFerdem k\u00F6nnen f\u00FCr ein gegebenes Syntaxdiagramm-SynDiaSystem W\u00F6rter erzeugt werden (Worterzeugung).
ModuleInfo.GNU_General_Public_License_10=GNU General Public License
RecognizeWord.Algo_title_3=R\u00FCcksprungalgorithmus zur Worterkennung:\n
RecognizeWord.Algo_Description_1_4=0. Bevor der Algorithmus abl\u00E4uft, wird der Ausgang jedes K\u00E4stchens mit \n
RecognizeWord.Algo_Description_2_5=\ \ \ einer Marke versehen; wir nennen sie die R\u00FCcksprungadresse dieses K\u00E4stchens.\n
RecognizeWord.Algo_Description_3_6=1. Beginne am Eingang des ersten Syntaxdiagramms von U (Startdiagramm).\n
RecognizeWord.Algo_Description_4_7=2. Folge den Linien auf einem legalen Weg.\n
RecognizeWord.Algo_Description_5_8=\ \ \ - Falls dabei der Ausgang erreicht wrid, gehe nach Punkt 5.\n
RecognizeWord.Algo_Description_6_9=\ \ \ - Falls ein K\u00E4stchen bzw. Oval erreicht wird, gehe nach Punkt 3.\n
RecognizeWord.Algo_Description_7_10=3. - Falls es sich um ein Oval handelt, vergleiche das darin enthaltene \n
RecognizeWord.Algo_Description_8_11=\ \ \ \ \ Terminalzeichen mit dem derzeit zu erkennenden Buchstaben\n
RecognizeWord.Algo_Description_9_12=\ \ \ \ \ -> wenn stimmt: gehe anschlie\u00DFend zu Punkt 2 zur\u00FCck.\n
RecognizeWord.Algo_Description_10_13=\ \ \ \ \ -> wenn nicht endet der Algorithmus hier und das Wort\n
RecognizeWord.Algo_Description_11_14=\ \ \ \ \ \ \ \ wurde nicht erkannt\! Eventuell suchen eines alternativen Weg\!\n
RecognizeWord.Algo_Description_12_15=\ \ \ - Andernfalls gehe zu Punkt 4.\n
RecognizeWord.Algo_Description_13_16=4. - Falls es sich um ein K\u00E4stchen handelt, dann \n
RecognizeWord.Algo_Description_14_17=\ \ \ \ \ \ -> lege eine Kopie der R\u00FCcksprungadresse dieses K?stchens oben auf den Keller,\n
RecognizeWord.Algo_Description_15_18=\ \ \ \ \ \ -> suche den Eingang des Diagranns in U auf, welches den Namen tr\u00E4gt,\n
RecognizeWord.Algo_Description_16_19=\ \ \ \ \ \ \ \ \ der in dem erreichten K\u00E4stchen steht\n
RecognizeWord.Algo_Description_17_20=\ \ \ \ \ \ -> und arbeite an dem Eingang des neuen Diagramms ab Punkt 2 weiter.\n
RecognizeWord.Algo_Description_18_21=5. - Wenn noch eine R\u00FCcksprungadresse adr auf dem Keller liegt, dann\n
RecognizeWord.Algo_Description_19_22=\ \ \ \ \ \ -> gehe zur Stelle, die mit adr gekennzeichnet ist und\n
RecognizeWord.Algo_Description_20_23=\ \ \ \ \ \ -> nehme adr vom Keller und setzte die Bearbeitung an dieser Stelle am Punkt 2 fort.\n
RecognizeWord.Algo_Description_21_24=6. - Wenn keine R\u00FCcksprungadresse auf dem Keller liegt und man sich am Ausgang des \n
RecognizeWord.Algo_Description_22_25=\ \ \ \ \ Startdiagrammes befindet, dann endet der Erkennungsprozess hier erfolgreich.\n
RecognizeWord.Algo_Description_23_26=\n vgl. \'Algorithmen, Datenstrukturen und Programierung\' Skript von Prof. Vogler vom 7.10.2002 Seite 22
RecognizeWord.Algo_Description_24_27=das bis zu diesem Zeitpunkt generierte Wort lautet:\n
RecognizeWord.the_word_to_recognize_is___n_33=das zu erkennende Wort lautet: \n
RecognizeWord._nthe_word_generated_until_here_is___n_34=\ndas bis zu diesem Zeitpunkt generierte Wort lautet: \n
RecognizeWord.WordInput_35=Worteingabe
RecognizeWord.Word_to_recognize__36=Das zu erkennende Wort:
RecognizeWord.Warning_39=Warnung
RecognizeWord.You_must_enter_a_proper_string_40=Bitte geben Sie ein passendes Wort ein, welches erkannt werden soll.\n
RecognizeWord.Now_the_Algo_will_be_finished_!_41=Der Algorithmus ist beendet\!
RecognizeWord.recognize_missmatch_1_42=Wortunterschied
RecognizeWord.recognize_missmatch_2_43=Der Algorithmus wird hier unterbrochen, da sich an dieser 
RecognizeWord.recognize_missmatch_3_44=\ Stelle das generierte Wort vom zu erkennenden Wort unterscheidet.\n
RecognizeWord.recognize_missmatch_4_45=M\u00F6chten Sie einen anderen Pfad testen oder den Algorithmus beenden?
RecognizeWord.Algo_finished_unsuccessfull_1_46=Algorithmus fertig
RecognizeWord.Algo_finished_unsuccessfull_2_47=Der Algorithmus ist nun fertig\! Das zu erkennende Wort 
RecognizeWord.Algo_finished_unsuccessfull_3_48=\ konnte auf dem gew\u00E4hltem Pfad erkannt werden. M\u00F6chten Sie den Algorithmus beenden?
RecognizeWord.Alternative_Dialog_1_49=Alternative Wege
RecognizeWord.Alternative_Dialog_2_50=Alle alternativen Wege sind von oben beginnend durchnumeriert. Es gibt 
RecognizeWord.Alternative_Dialog_3_51=\ alternative Wege\. Welchen m\u00F6chten Sie nehmen?
RecognizeWord.Warning_53=Warnung
RecognizeWord.Please_use_a_value_between_1_and__54=Bitte geben Sie einen Wert zwischen 1 und 
RecognizeWord.Repetition_Dialog__1_56=Wiederholung
RecognizeWord.Repetition_Dialog__2_57=M\u00F6chten Sie die Wiederholung durchlaufen?
TransAlgorithm.Algo_Description_1_1=Umformen einer EBNF-Definition in ein semantisch \u00E4quivalentes System von Syntaxsdiagrammen\n
TransAlgorithm.Algo_Description_2_2=vgl. \"Algorithmen, Datenstrukturen und Programierung\", Univ.-Prof. Dr.Ing. Heiko Vogler vom 7.10.2002, Seite 141\n\n
TransAlgorithm.Algo_Description_3_3=Definition 15.3\n
TransAlgorithm.Algo_Description_4_4=Sei \u03B5=(V,\u03A3,S,R) eine EBNF-Definition. Sei v \u2208 V und sei v::=\u03B1 die EBNF-Regel, bei der v auf der linken Seite steht.\n
TransAlgorithm.Algo_Description_5_5=Dann \u00FCbersetze den EBNF-Term \u03B1 in ein Syntaxdiagramm aus SynDia(\u03A3,V). Diesem Syntaxdiagramm ordnen wir den Namen v zu.\n\n
TransAlgorithm.Algo_Description_6_6=Die \u00DCbersetzung trans: T(\u03A3,V) \u2192 SynDia(\u03A3,V) ist induktiv \u00FCber den Aufbau von EBNF-Termen definiert.\n\n
TransAlgorithm.Algo_Description_7_7=\ \ \ 1. Sei a \u2208 V;\n
TransAlgorithm.Algo_Description_8_8=\ \ \ \ \ \ \ \ \ \u2022 trans(a) = ein K\u00E4stchen, welches mit a beschriftet ist.\n\n
TransAlgorithm.Algo_Description_9_9=\ \ \ 2. Sei w \u2208 \u03A3;\n
TransAlgorithm.Algo_Description_10_10=\ \ \ \ \ \ \ \ \ \u2022 trans(w) = ein Oval, welches mit w beschriftet ist.\n\n
TransAlgorithm.Algo_Description_11_11=\ \ \ 3. Sei \u03B1 \u2208 T(\u03A3,V);\n
TransAlgorithm.Algo_Description_12_12=\ \ \ \ \ \ \ \ \ \u2022 trans({\u03B1}) = eine Wiederholung, in welcher der noch zu transformierende EBNF-Term \u03B1 steht.\n
TransAlgorithm.Algo_Description_13_13=\ \ \ \ \ \ \ \ \ \ \ Beachte: Der Eingang zum Syntaxdiagramm trans(\u03B1) ist rechts und der Ausgang links.\n
TransAlgorithm.Algo_Description_14_14=\ \ \ \ \ \ \ \ \ \u2022 trans([\u03B1]) = eine Alternative, in welcher genau ein Weg existiert, auf dem der noch zu transformierenden EBNF-Term \u03B1 steht.\n
TransAlgorithm.Algo_Description_15_15=\ \ \ \ \ \ \ \ \ \u2022 trans((\u03B1)) = trans(\u03B1)\n\n
TransAlgorithm.Algo_Description_16_16=\ \ \ 4. Sei \u03B1\u2081,\u03B1\u2082 \u2208 T(\u03A3,V);\n
TransAlgorithm.Algo_Description_17_17=\ \ \ \ \ \ \ \ \ \u2022 trans(\u03B1\u2081\u03B1\u2082) = eine Konkatenation, welche sich aus trans(\u03B1\u2081) und trans(\u03B1\u2082) zusammensetzt.\n
TransAlgorithm.Algo_Description_18_18=\ \ \ \ \ \ \ \ \ \u2022 trans((\u03B1\u2081|\u03B1\u2082)) = eine Alternative, in welcher genau ein Weg existiert, auf dem trans(\u03B1\u2081) steht und genau ein anderer Weg, auf dem trans(\u03B1\u2082) steht.\n
TransAlgorithm.Algorithm_completed_19=Algorithmus beendet
TransAlgorithm.The_algorithm_has_been_completed_!_20=Der Algorithmus ist nun beendet\!
EbnfDefinition.,_R)_mit_n_2=, R) mit\n
EbnfDefinition.__und_R__n_9=\ \ und R:\n
EbnfParseException.._char___1=. Zeichen: 
EbnfParser.EbnfParseException_1_9=Menge der Variablen und Terminale nicht disjunkt
EbnfParser.EbnfParseException_2_10=Metasymbol in der Menge der Variablen
EbnfParser.EbnfParseException_3_11=Metasymbol in der Menge der Terminalsymbole
EbnfParser.EbnfParseException_4_12=es wurde keine Startvariable angeben
EbnfParser.EbnfParseException_5_13=die linken Seiten von Regeln d\u00FCrfen nicht leer sein
EbnfParser.EbnfParseException_6_14=es gibt undefinierte Syntaxvariablen
EbnfParser.EbnfParseException_7_15=die Startvariable ist nicht in der Menge der Syntaxvariablen
EbnfTermParser.EbnfParseException_1_1=rechte Seite leer
EbnfTermParser.EbnfParseException_2_2=Fehler bei 
EbnfTermParser.EbnfParseException_3_3=dieser Fehler sollte nicht auftreten
EbnfTermParser.EbnfParseException_4_4=(Regel "
EbnfTermParser.EbnfParseException_5_5=unerwartetes Ende
EbnfTermParser.EbnfParseException_6_6=Fehler bei Ebnf Wiederholung: 
EbnfTermParser.EbnfParseException_7_7=unerwartetes Ende
EbnfTermParser.EbnfParseException_8_8=Fehler bei Ebnf Option: 
EbnfTermParser.EbnfParseException_9_9=unerwartetes Ende
EbnfTermParser.EbnfParseException_10_10=unerwartetes Ende
EbnfTermParser.EbnfParseException_11_11=Fehler bei Ebnf Alternative: 
EbnfTermParser.EbnfParseException_12_12=Fehler Ebnf Alternative oder Ebnf Vorrang: 
EbnfTermParser.EbnfParseException_13_13=unerwartetes Zeichen: 
EbnfTermParser.EbnfParseException_14_14=unerwartetes Ende
EbnfTermParser.EbnfParseException_15_15=Fehler bei Ebnf Wiederholung: 
EbnfTermParser.EbnfParseException_16_16=unerwartetes Ende
EbnfTermParser.EbnfParseException_17_17=Fehler Ebnf Option: 
EbnfTermParser.EbnfParseException_18_18=unerwartetes Ende
EbnfTermParser.EbnfParseException_19_19=unerwartetes Ende
EbnfTermParser.EbnfParseException_20_20=Fehler bei Ebnf Alternative: 
EbnfTermParser.EbnfParseException_21_21=Fehler bei Ebnf Alternative oder Ebnf Vorrang: 
EbnfTermParser.EbnfParseException_22_22=Syntaxvariable oder Terminalsymbol nicht definiert ("
InputParser.Input_empty_1=Eingabe leer
InputParser.Invalid_input_2=ung\u00FCltige Eingabe
BackTrackingAlgoGui.SynDiaSystem_1=Syntaxdiagrammsystem
BackTrackingAlgoGui.Stack_2=Keller
BackTrackingAlgoGui.Algo_definition_3=Algorithmendefinition
BackTrackingAlgoGui.Generated_word_4=Generiertes Wort
CreateSynDiaClickGui.Use_the_buttons_below_to_get_a_new_syntax_diagram._1=Benutzen Sie die Buttons, um ein Syntaxdiagramm zu erstellen.
EbnfInputGui.Ebnf_Input_1=EBNF Eingabe
EbnfInputGui.Variables_3=Variablen:
EbnfInputGui.Set_of_SynVars_4=Menge der syntaktischen Variablen\n
EbnfInputGui.Colon_separated_5=getrennt durch Kommas
EbnfInputGui.e.g._A,B_6=z.B. A,B
EbnfInputGui.Terminalsymbols__7=Terminalsymbole:
EbnfInputGui.Set_of_terminalsymbols_n_8=Menge der Terminalsymbole\n
EbnfInputGui.Colon_separated_9=getrennt durch Kommas
EbnfInputGui.e.g._a,b_10=z.B. a,b
EbnfInputGui.Startvariable__11=Startvariable:
EbnfInputGui.e.g._S_12=z.B. S
EbnfInputGui.Specialchar__13=Sonderzeichen:
EbnfInputGui.Rules__22=Regeln:
EbnfInputGui.Name_of_SynDiaVar_23=Name der syntaktischen SynDiaVariable einer Regel
EbnfInputGui.Rules_in_latex_notation__n_25=Regeln in LaTeX-Notation:\n
EbnfInputGui.__^_converts_the_following_character_26=\\^ setzt macht das folgende Zeichen zu einem Metasymbol.
EbnfInputGui.add_27=Hinzuf\u00FCgen
EbnfInputGui.Add_new_line._28=Eine weitere Zeile f\u00FCr eine Regel hinzuf\u00FCgen.
EbnfInputGui.Delete_30=L\u00F6schen
EbnfInputGui.Delete_line._31=Ausgew\u00E4hlte Zeile aus Liste l\u00F6schen.
EbnfInputGui.Apply_33=Fertigstellen
EbnfInputGui.Error_analyzing_EBNF_47=Fehler w\u00E4hrend EBNF-Analyse
EbnfInputGui.Error_analyzing_EBNF_48=Fehler w\u00E4hrend EBNF-Analyse
TransAlgorithmGui.translation_1=\u00DCbersetzung
TransAlgorithmGui.Rest_variables_3=Verbleibende Variablen
TransAlgorithmGui.Algo_definition_4=Algorithmendefinition
AbortAlgoAction.Abort_1=Abbrechen
AbortAlgoAction.Abort_the_algorithm._2=den Algorithmus abbrechen.
AddAlternativeAction.Alternative_1=Alternative
AddAlternativeAction.Add_alternative._2=Alternative hinzuf\u00FCgen.
AddAlternativeAction.Alternative_4=Alternative
AddAlternativeAction.How_many_alternative_ways_do_you_want_to_have__5=Wieviele Alternativwege wollen Sie haben?
AddAlternativeAction.Warning_7=Warnung
AddAlternativeAction.Please_use_a_value_of_2_or_more._8=Bitte benutze einen Wert von 2 oder mehr.
AddAlternativeAction.Warning_9=Warnung
AddAlternativeAction.Click_on_a_cloud_to_add_a_new_element._10=Klicke auf eine Wolke um ein neues Element hinzuzuf\u00FCgen.
AddCloudAction.Cloud_1=Wolke
AddCloudAction.Add_cloud._2=Wolke hinzuf\u00FCgen.
AddConcatenationAction.Concatenation_1=Konkatenation
AddConcatenationAction.Add_concatenation._2=Konkatenation hinzuf\u00FCgen.
AddConcatenationAction.Concatenation_4=Konkatenation
AddConcatenationAction.How_many_clouds_do_you_want_to_have__5=Wieviele Wolken wollen Sie haben?
AddConcatenationAction.Warning_7=Warnung
AddConcatenationAction.Click_on_a_cloud_to_add_a_new_element._8=Klicke auf eine Wolke um ein neues Element hinzuzuf\u00FCgen.
AddEpsilonAction.Empty_Figure_1=leeres Zeichen
AddEpsilonAction.Add_Epsilon._2=Epsilon hinzuf\u00FCgen.
AddEpsilonAction.Warning_4=Warnung
AddEpsilonAction.Click_on_a_cloud_to_add_a_new_element._5=Klicke auf eine Wolke um ein neues Element hinzuzuf\u00FCgen.
AddInitialAction.New_Diagram_1=Neues Diagramm
AddInitialAction.Add_initial_diagram._2=Anfangsdiagramm hinzuf\u00FCgen.
AddInitialAction.Warning_4=Warnung
AddInitialAction.Click_on_a_panel_to_add_a_new_initial_figure._5=Klicke auf eine Bedientafel um eine neue Anfangsfigur hinzuf\u00FCgen.
AddInitialAction.Initial_figure_6=Anfangsfigur
AddInitialAction.Name__7=Name:
AddInitialAction.Warning_10=Warnung
AddInitialAction.EBNF_does_not_allow_multiple_diagrams_with_same_names._11=die EBNF erlaubt nicht mehrere Diagramme mit dem selben Namen.
AddInitialAction.Warning_13=Warnung
AddInitialAction.EBNF_does_not_allow_diagrams_without_names._14=die EBNF erlaubt keine Diagramme ohne Namen.
AddRepetitionAction.Repetition_1=Wiederholung
AddRepetitionAction.Add_repetition_2=Wiederholung hinzuf\u00FCgen
AddRepetitionAction.Warning_4=Warnung
AddRepetitionAction.Click_on_a_cloud_to_add_a_new_element._5=Klicke auf eine Wolke um ein Element hinzuzuf\u00FCgen.
AddSynVariAction.Syntax_variable_1=Syntaxvariable
AddSynVariAction.Add_syntax_variable._2=Syntaxvariable hinzuf\u00FCgen.
AddSynVariAction.Syntax_variable_4=Syntaxvariable
AddSynVariAction.Syntax_variable__5=Syntaxvariable:
AddSynVariAction.Warning_9=Warnung
AddSynVariAction.You_must_enter_a_proper_string_for_a_syntax_variable._10=Sie m\u00FCssen eine zul\u00E4ssige Zeichenkette f\u00FCr eine Syntaxvariable eingeben.
AddSynVariAction.Warning_11=Warnung
AddSynVariAction.Click_on_a_cloud_to_add_a_new_element._12=Klicke auf eine Wolke um ein neues Element hinzuzuf\u00FCgen.
AddTerminalAction.Terminal_symbol_1=Terminalsymbol
AddTerminalAction.Add_terminal_symbol._2=Terminalsymbol hinzuf\u00FCgen.
AddTerminalAction.Terminal_symbol_4=Terminalsymbol
AddTerminalAction.Terminal_symbol__5=Terminalsymbol:
AddTerminalAction.Warning_9=Warnung
AddTerminalAction.You_must_enter_a_proper_string_for_a_terminal_symbol._10=Sie m\u00FCssen eine zul\u00E4ssige Zeichenkette f\u00FCr ein Terminalsymbol eingeben.
AddTerminalAction.Warning_11=Warnung
AddTerminalAction.Click_on_a_cloud_to_add_a_new_element._12=Klicke auf eine Wolke um ein neues Element hinzuzuf\u00FCgen.
AlternativeAction.Alternative_1=Alternative
AlternativeAction.Create_Alternative_2=Alternative erzeugen
CreateEbnfAction.EBNF_erstellen_1=EBNF erstellen
CreateEbnfAction.Eingabe_von_EBNF_Termen._2=Eingabe von EBNF Termen.
CreateEbnfAction.Really_create_new_EBNF__4=Wirklich eine neue EBNF erzeugen?
CreateEbnfAction.Creating_a_new_EBNF_will_destroy_all_you_have_done_with_this_module_up_to_now_!_5=Die Erzeugung einer neuen EBNF wird alles zerstören was Sie bis jetzt mit dem Modul gemacht hast\!
CreateSynDiaAction.Syntaxdiagramme_erstellen_1=Syntaxdiagramme erstellen
CreateSynDiaAction.Erstellen_eines_Syntaxdiagramm-Systems_mit_Hilfe_der_Maus._2=Erstellen eines Syntaxdiagramm-Systems mit Hilfe der Maus.
CreateSynDiaAction.Really_create_new_syntactical_diagram__4=Wirklich einen neues Syntaxdiagramm erzeugen?
CreateSynDiaAction.Creating_a_new_syntactical_diagram_will_destroy_all_you_have_done_with_this_module_up_to_now_!_5=Die Erzeugung eines neuen Syntaxdiagramms wird alles zerst\u00F6ren was du bist jetzt mit dem Modul gemacht haben\!
FirstAction.First_1=Anfang
FirstAction.Jump_to_first._2=zum Anfang springen.
GenerateWordAction.generate_word_algorithm_1=Worterzeugungs Algorithmus
GenerateWordAction.Start_generate_word_algorithm._2=den Worterzeugungsalgorithmus starten.
LastAction.Last_1=Ende
LastAction.Jump_to_last._2=zum Ende springen.
LeftAction.Previous_1=Vorhergehender
LeftAction.Previous_step._2=vorhergehender Schritt.
PerformAllAction.Perform_All_1=alles durchf\u00FChren
PerformAllAction.Perform_trans-algorithm_automatically_to_the_end._2=Den Trans-Algorithmus automatisch bis zum Ende durchf\u00FChren.
PerformAllAction.performAll_4=alles durchf\u00FChren
PerformNextAction.Next_1=Weiter
PerformNextAction.Perform_next_step._2=N\u00E4chsten Schritt des Algorithmus ausf\u00FChren.
PerformNextAction.performNext_4=n\u00E4chsten durchf\u00FChren
RecognizeWordAction.recognize_word_algorithm_1=Worterkennungsalgorithmus
RecognizeWordAction.Start_recognize_word_algorithm._2=den Worterkennungsalgorithmus starten.
RightAction.Next_1=Weiter
RightAction.Perform_next_step._2=N\u00E4chsten Schritt im Algorithmus ausf\u00FChren.
SynDiaDoneAction.Diagram_done_1=Diagramm fertig
SynDiaDoneAction.Done_2=fertig
SynDiaDoneAction.Warning_4=Warnung
SynDiaDoneAction.There_is_no_syntax_diagram._5=Es gibt kein Syntaxdiagramm.
SynDiaDoneAction.Question_6=Frage
SynDiaDoneAction.There_are_still_clouds_left._Do_you_want_them_replaced_by_simple_lines__7=Es sind noch Wolken \u00FCbrig. Sollen sie mit einfachen Linien ersetzt werden?
SynDiaDoneAction.Warning_8=Warnung
SynDiaDoneAction.There_is_no_definition_for_9=Es gibt keine Definition f\u00FCr
TransAction.trans_algorithm_1=Transalgorithmus
TransAction.Start_trans_algorithm._2=Transalgorithmus starten.
WizardAction.Wizard_1=Wizard
WizardAction.Starten_des_Wizards_2=Starten des Wizards
WizardAction.Really_start_wizard__4=Wirklich den Wizard starten?
WizardAction.Starting_the_wizard_will_destroy_all_you_have_done_with_this_module_up_to_now_!_5=Der Start des Wizards wird alles zerst\u00F6ren was Sie bis jetzt mit dem Modul gemacht haben\!
FirstChoice.Module_title_1=Modul Syntaxdiagramme und EBNF
FirstChoice.What_do_you_want_to_do_2=Was m\u00F6chten Sie tun?
FirstChoice.Load_EBNF_3=EBNF laden: 
FirstChoice.Load_sample_EBNF_4=Eine fr\u00FCher eingegebene EBNF-Definiton, oder eine der Beispieldefinitionen aus einer Datei laden.
FirstChoice.Enter_EBNF_5=EBNF eingeben: 
FirstChoice.Enter_new_EBNF_definition._6=Eine neue EBNF-Definition der Form \u03B5 = (V, \u03A3, S, R) eingeben.
FirstChoice.Create_SynDia_7=Syntax-Diagramm-System erstellen: 
FirstChoice.Create_SynDia_using_mouse_8=Ein neues Syntax-Diagramm-System mit Hilfe der Maus erstellen.
StartWizardDialog.Assistent_for_creating_new_file_1=Assistent zum Erstellen einer neuen Datei
SynDiaSystem.(_u03A3,_V)_mit_n___u03A3___{_4=(\u03A3, V) mit\n  \u03A3 = {
