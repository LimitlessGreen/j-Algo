Module_name=Hoare
Module_version=0.9
Module_authors=Gerald Fest, Peter Mucha, Stefan Kastenholz, Robert Krahn, Markus Müller
Module_description_1=This modul helps learning and understanding the hoare-calculus.
Module_description_2=The tree for a given programm can be interactivly developed.
Module_license=GNU General Public License
Beamer_mode=beamer-mode

ttt.openC0Program=parse C0-program
ttt.redo=one step forward
ttt.undo=one step back
ttt.reparse=parse C0-program
ttt.reinit = reinit
ttt.toggleDesc=toggle description
ttt.abortEval=abort evaluation
ttt.evalTree=evaluate the whole tree
ttt.delNode=delete the tree above the highlighted node

out.evalOfNode=evaluation 
out.success=was successful
out.evalError=evaluation error occured: 
out.assignError=Error on assign rule apply
out.noValidNode=no valid node selected
out.alreadyApplied=already applied
out.ruleApplyError=error on ruleapply
out.wrongAssertion=wrong assertion
out.notApplicable=not applicable
out.controlVariable=control variable
out.from=from
out.to=to
out.function=term
out.maxEvalTime=maximum evaluation time
out.seconds=seconds
out.minutes=minutes
out.hour=hour
out.evalAmount=number of evaluations
out.preCond=precondition
out.postCond=postcondition
out.assSuccess=assignment successful
out.missingUserInput=missing user input
out.notApplieableOn= not applicable on 
out.missingOperator=missing operator
out.missingBracketsAnd=brackets on \u2227 not correct 
out.missingBracketsOr=brackets on \u2228 not correct
out.wrongNrOfBrackets=incorrect number of brackets
out.syntaxInvalid=expression syntactically incorrect
out.evalParserError=error on evaluation
out.loadError=error on loading
out.saveError=error on saving
tree.empty=<h3>No program loaded</h3>



name.openC0Program=opens C0-Program
name.reparse=reparse C0Program
name.toggleDesc=toggle Description
name.redo=Redo
name.undo=Undo
name.reinit=reinit
name.evalTree=evaluate tree
name.delNode=delete the tree above the highlighted node
name.eraseLog=Clear

name.assign=assigment
name.comp=compound
name.sequence=sequence
name.alt1=if-statement
name.alt2=IfElse-statement
name.iter=while-statement
name.SV=stronger precondition
name.SN=weaker postcondition

rule.assign.title=Assignment rule
rule.assign.desc=(AssR)
rule.assign.label=x=r;
rule.assign.content={P<small>[x/\u03C4]</small>}\u00A0\u00A0<b>x = \u03C4;</b>\u00A0\u00A0{P}

rule.comp.title=Compound rule 
rule.comp.desc=(CR)
rule.comp.label={...}
rule.comp.content=<u>{P}\u00A0\u00A0<b>A<small>1</small>...A<small>n</small></b>\u00A0\u00A0{Q}</u><br>{P}\u00A0\u00A0{<b>A<small>1</small>...A<small>n</small></b>}\u00A0\u00A0{Q}

rule.sequence.title=Sequence rule 
rule.sequence.desc=(SR)
rule.sequence.label=A1A2
rule.sequence.content=<u>{P}\u00A0<b>A<small>1</small></b>\u00A0{Q}\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0{Q}\u00A0<b>A<small>2</small></b>\u00A0{R}</u><br>{P}\u00A0<b>A<small>1</small>A<small>2</small></b>\u00A0{R}

rule.alt1.title=Alternative rule 1 
rule.alt1.desc=(A1)
rule.alt1.label=if(..)
rule.alt1.content=<u>{P\u2227\u220F}\u00A0<b>A</b>\u00A0{Q}\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0(P\u2227\u00AC\u220F) => Q</u><br>{P}\u00A0\u00A0<b>if (\u220F) A</b>\u00A0\u00A0{Q}

rule.alt2.title=Alternative rule 2 
rule.alt2.desc=(A2)
rule.alt2.label=if(..)..else..
rule.alt2.content=<u>{P\u2227\u220F}\u00A0<b>A<small>1</small></b>\u00A0{Q}\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0(P\u2227\u00AC\u220F)\u00A0<b>A<small>2</small></b>\u00A0{Q}</u><br>{P}\u00A0\u00A0<b>if (\u220F) A<small>1</small>\u00A0\u00A0\u00A0\u00A0else A<small>2</small></b>\u00A0{Q}

rule.iter.title=Iteration rule 
rule.iter.desc=(IR)
rule.iter.label=while(..)
rule.iter.content=<u>\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0{P\u2227\u220F}\u00A0<b>A</b>\u00A0{P}\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0</u><br>{P}\u00A0\u00A0<b>while (\u220F) A</b>\u00A0\u00A0{P\u2227\u00AC\u220F}

rule.SV.title=Stronger precondition 
rule.SV.desc=(SP)
rule.SV.label=_
rule.SV.content=<u>R=>P\u00A0\u00A0\u00A0\u00A0{P}\u00A0<b>A</b>\u00A0{Q}</u><br>{R}\u00A0<b>A</b>\u00A0{Q}

rule.SN.title=Weaker postcondition 
rule.SN.desc=(WP)
rule.SN.label=_
rule.SN.content=<u>{P}\u00A0<b>A</b>\u00A0{Q}\u00A0\u00A0\u00A0\u00A0Q=>R</u><br>{P}\u00A0<b>A</b>\u00A0{R}




