Module_name=Hoare
Module_version=0.9
Module_authors=Gerald Fest, Peter Mucha, Stefan Kastenholz, Robert Krahn, Markus Müller
Module_description_1=Dieses Modul hilft beim Lernen und Verstehen von Beweisbäumen im Sinne des Hoare-Kalküls.
Module_description_2=Der Beweisbaum für ein Programm kann interaktiv entwickelt werden.
Module_license=GNU General Public License
Beamer_mode=Beamer-Modus

ttt.openC0Program=C0-Program öffnen
ttt.redo=Einen Schritt wiederherstellen
ttt.undo=Einen Schritt rückgängig machen
ttt.reparse=C0-Programm parsen
ttt.reinit = Programm reinitialisieren
ttt.toggleDesc=Details im Baum ein/ausblenden
ttt.abortEval=Evaluation abbrechen
ttt.evalTree=ganzen Baum evaluieren
ttt.delNode=Teilbaum löschen

out.evalOfNode=Evaluation 
out.success=war erfolgreich
out.evalError=Fehler bei der Auswertung 
out.assignError=Fehler beim Zuweisungsaxiom
out.noValidNode=Keinen zulässigen Knoten gewählt
out.alreadyApplied=Bereits angewendet
out.ruleApplyError=Fehler bei Regelanwendung
out.wrongAssertion=Assertion falsch
out.notApplicable=nicht anwendbar
out.controlVariable=Laufvariable
out.from=von
out.to=bis
out.function=Term
out.maxEvalTime=Maximale Dauer
out.seconds=Sekunden
out.minutes=Minuten
out.hour=Stunde
out.evalAmount=Anzahl der Evaluationen
out.preCond=Vorbedingung
out.postCond=Nachbedingung
out.assSuccess=Zuweisung erfolgreich
out.missingUserInput=Fehlende Benutzereingaben
out.notApplieableOn= nicht anwendbar auf 
out.missingOperator=fehlender Operator
out.missingBracketsAnd=\u2227 nicht korrekt geklammert
out.missingBracketsOr=\u2228 nicht korrekt geklammert
out.wrongNrOfBrackets=Klammerungsfehler(nicht alle Klammern schließen)
out.syntaxInvalid=Ausdruck syntaktisch nicht korrekt
out.evalParserError=Fehler beim Auswerten 
out.loadError=Fehler beim Laden
out.saveError=Fehler beim Speichern
tree.empty=<h3>Kein Programm geladen</h3>

name.openC0Program=C0-Program öffnen
name.reparse=parst C0Program neu
name.toggleDesc=Details ein/aus
name.redo=Wiederherstellen
name.undo=Rückgängig
name.reinit=Programm neu starten
name.evalTree=Baum testen
name.delNode=Teilbaum löschen
name.eraseLog=Löschen

name.assign=Zuweisungsaxiom
name.comp=Block-Statement
name.sequence=Sequenz
name.alt1=If-Statement
name.alt2=IfElse-Statement
name.iter=While-Statement
name.SV=Stärkere Vorbedingung
name.SN=Schwächere Nachbedingung


rule.assign.title=Zuweisungsaxiom 
rule.assign.desc=(ZA)
rule.assign.label=x=r;
rule.assign.content={P<small>[x/\u03C4]</small>}\u00A0\u00A0<b>x = \u03C4;</b>\u00A0\u00A0{P}

rule.comp.title=Compregel 
rule.comp.desc=(CR)
rule.comp.label={...}
rule.comp.content=<u>{P}\u00A0\u00A0<b>A<small>1</small>...A<small>n</small></b>\u00A0\u00A0{Q}</u><br>{P}\u00A0\u00A0{<b>A<small>1</small>...A<small>n</small></b>}\u00A0\u00A0{Q}

rule.sequence.title=Sequenzregel 
rule.sequence.desc=(SR)
rule.sequence.label=A1A2
rule.sequence.content=<u>{P}\u00A0<b>A<small>1</small></b>\u00A0{Q}\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0{Q}\u00A0<b>A<small>2</small></b>\u00A0{R}</u><br>{P}\u00A0<b>A<small>1</small>A<small>2</small></b>\u00A0{R}

rule.alt1.title=Alternativregel1 
rule.alt1.desc=(A1)
rule.alt1.label=if(..)
rule.alt1.content=<u>{P\u2227\u220F}\u00A0<b>A</b>\u00A0{Q}\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0(P\u2227\u00AC\u220F) => Q</u><br>{P}\u00A0\u00A0<b>if (\u220F) A</b>\u00A0\u00A0{Q}

rule.alt2.title=Alternativregel2 
rule.alt2.desc=(A2)
rule.alt2.label=if(..)..else..
rule.alt2.content=<u>{P\u2227\u220F}\u00A0<b>A<small>1</small></b>\u00A0{Q}\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0(P\u2227\u00AC\u220F)\u00A0<b>A<small>2</small></b>\u00A0{Q}</u><br>{P}\u00A0\u00A0<b>if (\u220F) A<small>1</small>\u00A0\u00A0\u00A0\u00A0else A<small>2</small></b>\u00A0{Q}

rule.iter.title=Iterationsregel 
rule.iter.desc=(IR)
rule.iter.label=while(..)
rule.iter.content=<u>\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0{P\u2227\u220F}\u00A0<b>A</b>\u00A0{P}\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0</u><br>{P}\u00A0\u00A0<b>while (\u220F) A</b>\u00A0\u00A0{P\u2227\u00AC\u220F}

rule.SV.title=stärkere Vorbedingung 
rule.SV.desc=(SV)
rule.SV.label=_
rule.SV.content=<u>R=>P\u00A0\u00A0\u00A0\u00A0{P}\u00A0<b>A</b>\u00A0{Q}</u><br>{R}\u00A0<b>A</b>\u00A0{Q}

rule.SN.title=schwächere Nachbedingung 
rule.SN.desc=(SN)
rule.SN.label=_
rule.SN.content=<u>{P}\u00A0<b>A</b>\u00A0{Q}\u00A0\u00A0\u00A0\u00A0Q=>R</u><br>{P}\u00A0<b>A</b>\u00A0{R}